@startuml

title __REPOSITORIES's Class Diagram__\n

  namespace com.ferllop.evermind {
    namespace repositories {
      class com.ferllop.evermind.repositories.AuthRepository {
          + AuthRepository()
          + getUserEmail()
          + getUserUID()
          + isLoggedIn()
          + isUserVerified()
          + login()
          + logout()
          + register()
          + sendResetPasswordEmail()
          + sendVerificationEmailToCurrentUser()
          + signOut()
      }
    }
  }
  

  namespace com.ferllop.evermind {
    namespace repositories {
      class com.ferllop.evermind.repositories.CardRepository {
          + CardRepository()
          + delete()
          + getAll()
          + getFromSearch()
          + insert()
          + load()
          + update()
      }
    }
  }
  

  namespace com.ferllop.evermind {
    namespace repositories {
      class com.ferllop.evermind.repositories.SubscriptionRepository {
          ~ TAG : String
          + SubscriptionRepository()
          + delete()
          + deleteSubscriptionsWithCardID()
          + downgradeLevel()
          + getAllFromUser()
          + insert()
          + subscribeUserToCard()
          + upgradeLevel()
          - updateLevel()
      }
    }
  }
  

  namespace com.ferllop.evermind {
    namespace repositories {
      class com.ferllop.evermind.repositories.SubscriptionsGlobal {
          ~ TAG : String
          ~ allSubscriptions : List<Subscription>
          ~ pointer : int
          {static} - subscriptionsGlobal : SubscriptionsGlobal
          + addSubscription()
          + deleteSubscription()
          + getCardIdFrom()
          {static} + getInstance()
          + getProgress()
          + getSubscriptionID()
          + getSubscriptions()
          + getSubscriptionsCount()
          + getSubscriptionsForToday()
          + getTenOrRemainingForToday()
          + isUserSubscribedTo()
          + setAllSubscriptions()
          - SubscriptionsGlobal()
          - extractSubscriptionsForToday()
      }
    }
  }
  

  namespace com.ferllop.evermind {
    namespace repositories {
      class com.ferllop.evermind.repositories.UserRepository {
          ~ TAG : String
          + UserRepository()
          + clearCache()
          + delete()
          + getAll()
          + getFromUniqueField()
          + getLoggedUserExtraData()
          + insert()
          + isLoggedUserAdmin()
          + isUserLoggedIn()
          + isUserVerified()
          {static} + isValidPassword()
          + load()
          + login()
          + loginStatusUser()
          + onAuthActionResult()
          + onError()
          + onLogin()
          + onRegister()
          + registerUser()
          + sendResetPasswordEmail()
          + setCache()
          + setLocalUserName()
          + signOut()
          + update()
          + updateLoggedUserDayStartTime()
          + updateLoggedUserName()
          + updateUserLastConnection()
          + updateUserLastLogin()
          + updateUserStatus()
      }
    }
  }
  

  namespace com.ferllop.evermind {
    namespace repositories {
      class com.ferllop.evermind.repositories.UserRepository.RegisteringUser {
          ~ email : String
          ~ name : String
          ~ username : String
          + build()
          + setEmail()
          + setName()
          + setUsername()
      }
    }
  }
  

  com.ferllop.evermind.repositories.AuthRepository o-- com.ferllop.evermind.repositories.datastores.AuthDataStore : auth
  com.ferllop.evermind.repositories.CardRepository o-- com.ferllop.evermind.repositories.datastores.CardFirestoreDataStore : dataStore
  com.ferllop.evermind.repositories.SubscriptionRepository o-- com.ferllop.evermind.repositories.datastores.SubscriptionFirestoreDataStore : dataStore
  com.ferllop.evermind.repositories.UserRepository .up.|> com.ferllop.evermind.repositories.listeners.AuthListener
  com.ferllop.evermind.repositories.UserRepository o-- com.ferllop.evermind.repositories.AuthRepository : authRepository
  com.ferllop.evermind.repositories.UserRepository o-- com.ferllop.evermind.repositories.datastores.UserFirestoreDataStore : dataStore
  com.ferllop.evermind.repositories.UserRepository o-- com.ferllop.evermind.repositories.listeners.UserDataStoreListener : listener
  com.ferllop.evermind.repositories.UserRepository o-- com.ferllop.evermind.repositories.datastores.UserLocalDataStore : localDataStore
  com.ferllop.evermind.repositories.UserRepository o-- com.ferllop.evermind.repositories.UserRepository.RegisteringUser : registeringUser
  com.ferllop.evermind.repositories.UserRepository +-down- com.ferllop.evermind.repositories.UserRepository.RegisteringUser


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
